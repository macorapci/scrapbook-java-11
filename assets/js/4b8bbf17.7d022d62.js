"use strict";(self.webpackChunkscrapbook_java_11=self.webpackChunkscrapbook_java_11||[]).push([[327],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(a),u=r,f=s["".concat(c,".").concat(u)]||s[u]||d[u]||o;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},8668:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={id:"import-naming-conflict-page-id",title:"Import Naming Conflict"},i="Import Naming Conflict",l={unversionedId:"welcome-java/import-naming-conflict-page-id",id:"welcome-java/import-naming-conflict-page-id",title:"Import Naming Conflict",description:"Both without wildcard",source:"@site/docs/welcome-java/import-naming-conflict.md",sourceDirName:"welcome-java",slug:"/welcome-java/import-naming-conflict-page-id",permalink:"/scrapbook-java-11/docs/welcome-java/import-naming-conflict-page-id",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/welcome-java/import-naming-conflict.md",tags:[],version:"current",frontMatter:{id:"import-naming-conflict-page-id",title:"Import Naming Conflict"},sidebar:"java11",previous:{title:"Compile Java",permalink:"/scrapbook-java-11/docs/welcome-java/compile-java-page-id"},next:{title:"Order Elements In Class",permalink:"/scrapbook-java-11/docs/welcome-java/order-elements-in-class-page-id"}},c={},p=[{value:"Both without wildcard",id:"both-without-wildcard",level:2},{value:"One wildcard, other one not",id:"one-wildcard-other-one-not",level:2},{value:"Both with wildcard",id:"both-with-wildcard",level:2}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"import-naming-conflict"},"Import Naming Conflict"),(0,r.kt)("h2",{id:"both-without-wildcard"},"Both without wildcard"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.Date;\nimport java.sql.Date;\n")),(0,r.kt)("p",null,"If our java file has two import like this. When we call ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", java doesn't know which ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," we are talking about."),(0,r.kt)("h2",{id:"one-wildcard-other-one-not"},"One wildcard, other one not"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.*;\nimport java.sql.Date;\n")),(0,r.kt)("p",null,"If our java file has two import like this. When we call ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", java goes with ",(0,r.kt)("inlineCode",{parentName:"p"},"java.sql.Date"),"."),(0,r.kt)("h2",{id:"both-with-wildcard"},"Both with wildcard"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.*;\nimport java.sql.*;\n")),(0,r.kt)("p",null,"If our java file has two import like this. When we call ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", java doesn't know which ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," we are talking about."))}d.isMDXComponent=!0}}]);